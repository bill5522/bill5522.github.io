{"hash":"047f85ec51bfa3a4aacb1127251e2bb4591e5dd7","data":{"post":{"title":"利用 GitHub Action 实现自动化","path":"/posts/use-github-action/","date":"July 5. 2020","timeToRead":4,"cjkWordCount":2414,"cjkReadTime":11,"tags":[{"id":"GitHub Action","title":"GitHub Action","path":"/tag/GitHub%20Action/"},{"id":"CI","title":"CI","path":"/tag/CI/"}],"cate":{"id":"tech","title":"tech","path":"/category/tech/"},"description":"博客部署？我用 GitHub Action 自动部署<br>百度收录推送？我也用 GitHub Action 自动推送","published":true,"content":"<h2 id=\"前言\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>前言</h2>\n<p>首先，为什么选择静态网站？没后台，没数据库，但是方便折腾，可以完全自定义，这是我选择静态博客最大的原因之一。 <del>（其实没钱买服务器才是最大原因）</del></p>\n<p>部署静态网站的方法很多，GitHub Page, Coding Page, Gitee Page, Vercel 都是免费的，各有各的优势，先说说这几个免费的。</p>\n<h3 id=\"github-page\"><a href=\"#github-page\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>GitHub Page</h3>\n<p>Github Page 巨硬家的东西，除非不可抗力，要不然出问题的概率很小。但国内部分地区无法访问，部分地区访问速度慢。能利用 Github Action 实现自动化部署。速度问题或许可以通过 CloudFlare 的 CDN 来解决，但速度还是不怎么样。当然，如果你域名备案了，用国内的 CDN 也是没问题的。</p>\n<h3 id=\"coding-page\"><a href=\"#coding-page\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Coding Page</h3>\n<p>Coding Page 表明是 Coding 的，但 Coding 现在算是腾讯的了，出问题的概率也很小。但用的节点全是境外的，一般是香港和新加坡.....，而且日常宕机，动不动就崩了。同样能利用 集成CI 进行自动部署。</p>\n<h3 id=\"gitee-page\"><a href=\"#gitee-page\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Gitee Page</h3>\n<p>Gitee Page 码云家的，国内节点，速度没得说，快就完事了。自定义域名和自动更新（也就是说每次更新博客，推送到码云之后还要手动点击部署）需要购买 Pro 版，99 元/年。但因为是国内节点的原因，绑定的域名需要备案。码云还有个比较好的功能，能自动判断博客类型，支持 Jekyll、Hugo、Hexo，能自动进行编译，并部署生成的文件，也就是说你可以直接将整个博客文件夹推上去，每次更新只需要使用 git 推送下就行了，它会帮你生成。</p>\n<h3 id=\"vercel\"><a href=\"#vercel\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Vercel</h3>\n<p>Vercel 可以直接从 GitHub 导入博客仓库，且能识别静态博客类型，和码云一样自动生成。顺便看了下 Vercel 分配的节点，美国的，但是国内访问速度还是不错的，Ping 了一下，平均 62.0ms，速度也还不错（至少我这是这样）。</p>\n<h3 id=\"总结\"><a href=\"#%E6%80%BB%E7%BB%93\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>总结</h3>\n<ul>\n<li>不要求自定义域名，无脑上码云</li>\n<li>要自定义域名上 GitHub Page or Vercel</li>\n<li>Coding 不推荐</li>\n</ul>\n<p>那么本博客目前并没有采用上述方式进行部署，但全部体验过。因为域名进行了备案，就直接采用了腾讯的<strong>静态网站托管</strong>。</p>\n<p>有一说一，国内各家的 CDN 计费规则是真的复杂，第一次看完基本都一头雾水，这时候腾讯的云开发出现了。云开发中包含了静态网站托管，专为静态网站而生。计费规则很简单，<code>流量费用</code> + <code>空间费用</code>，而且自动部署到 CDN 上，速度超快。</p>\n<p>至于怎么使用云开发部署静态博客，官方已经给出了详细教程 <a href=\"https://cloud.tencent.com/document/product/1210/43365\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">静态网站托管 搭建 Hexo - 最佳实践 - 文档中心 - 腾讯云</a>。</p>\n<p>当然，这是收费的，不过挺便宜的，正常小站一个月不超过一元，而且还可以申请腾讯的 <a href=\"https://cloud.tencent.com/act/pro/wh99\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">云开发网站托管「9.9包年」赞助计划</a>。</p>\n<h2 id=\"自动部署\"><a href=\"#%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>自动部署</h2>\n<p>接下来进入重点，利用 GitHub Action 实现自动化部署，如果你还不知道 GitHub Action 是什么，可以看看 <a href=\"https://github.com/features/actions\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">官方介绍</a>，简单来说，以你的仓库为根目录，给你一台电脑，帮你完成一些事情。如果想进一步了解，可以看看 <a href=\"https://zkqiang.cn/posts/e8ed6836/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">编写自己的 GitHub Action，体验自动化部署</a></p>\n<h3 id=\"连接-github\"><a href=\"#%E8%BF%9E%E6%8E%A5-github\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>连接 GitHub</h3>\n<p>保证你的整个博客文件夹已 <code>push</code> 到了GitHub 上。如果没有，新建一个仓库 <code>Public</code> or <code>Private</code>  均可，然后将本地本地与仓库连接。</p>\n<p><code>username</code> 替换成用户名，<code>repo</code> 替换成仓库名</p>\n<pre class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">git</span> init\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span>\n<span class=\"token function\">git</span> commit -m <span class=\"token string\">\"first commit\"</span>\n<span class=\"token function\">git</span> remote <span class=\"token function\">add</span> origin https://github.com/username/repo.git\n<span class=\"token function\">git</span> push -u origin master<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<div class=\"admonition admonition-warning\"><div class=\"admonition-heading\"><h5><div class=\"admonition-icon\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"16\" viewBox=\"0 0 12 16\"><path fill-rule=\"evenodd\" d=\"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z\"></path></svg></div>🚨 注意</h5></div><div class=\"admonition-content\"><p>如果仓库为 <code>Public</code> 请不要将隐私内容直接写在文件中，暂时用一些单词替换，后续编写自动部署文件时有方法解决</p></div></div>\n<h3 id=\"编写-github-action\"><a href=\"#%E7%BC%96%E5%86%99-github-action\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>编写 GitHub Action</h3>\n<p>从这里开始，默认你已经看完之前提到的『编写自己的 GitHub Action，体验自动化部署』，或者对 GitHub Action 有初步的了解，知道大致操作。</p>\n<p>以我的<a href=\"https://JalenChuh.cn\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">个人主页</a>为例，是由 Vue.js 构建的，部署在腾讯云静态网站托管。GitHub 仓库地址：<a href=\"https://github.com/jalenchuh/homepage\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">homepage</a></p>\n<p>共分为 <code>Setup</code> <code>Build</code> <code>Lint</code> <code>Deploy</code> 四个步骤</p>\n<ul>\n<li>Setup: 安装 node 环境</li>\n<li>Build: 构建</li>\n<li>Lint: Lint 代码</li>\n<li>Deploy: 推送到腾讯静态网站托管</li>\n</ul>\n<pre class=\"language-yaml line-numbers\"><code class=\"language-yaml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy\n\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> master\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v1\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v1\n      <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'10.x'</span>\n\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Setup\n      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm install\n\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Build\n      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run build\n\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Lint\n      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run lint\n\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy\n      <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> deployStatic\n      <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> TencentCloudBase/cloudbase<span class=\"token punctuation\">-</span>action@v1.1.1\n      <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">secretId</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.SECRET_ID <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n        <span class=\"token key atrule\">secretKey</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.SECRET_KEY <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n        <span class=\"token key atrule\">envId</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.ENV_ID <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n        <span class=\"token key atrule\">staticSrcPath</span><span class=\"token punctuation\">:</span> dist<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<div class=\"admonition admonition-tip\"><div class=\"admonition-heading\"><h5><div class=\"admonition-icon\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"16\" viewBox=\"0 0 12 16\"><path fill-rule=\"evenodd\" d=\"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z\"></path></svg></div>对于隐私数据须在 secrets 中设置</h5></div><div class=\"admonition-content\"><p>文件中出现的 <code>secrets.xxx</code> 须在仓库的 <code>settings > secrets</code> 中设置</p><p>新建 <code>secrests</code> 时，<code>name</code> 为 <code>xxx</code> ，<code>Value</code> 为内容</p></div></div>\n<h3 id=\"部署到-github-page\"><a href=\"#%E9%83%A8%E7%BD%B2%E5%88%B0-github-page\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>部署到 GitHub Page</h3>\n<p><sup id=\"fnref-1\"><a href=\"#fn-1\" class=\"footnote-ref\">1</a></sup></p>\n<pre class=\"language-yaml line-numbers\"><code class=\"language-yaml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy                      <span class=\"token comment\"># Actions 显示的名字，随意设置</span>\n\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>push<span class=\"token punctuation\">]</span>                        <span class=\"token comment\"># 监听到 push 事件后触发</span>\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Checkout              <span class=\"token comment\"># 拉取当前执行 Actions 仓库的指定分支</span>\n      <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v2\n      <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">ref</span><span class=\"token punctuation\">:</span> master\n\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Update Submodule      <span class=\"token comment\"># 如果仓库有 submodule，在这里更新，没有则删掉此步骤</span>\n      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n        git submodule init\n        git submodule update --remote</span>\n\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Setup Node            <span class=\"token comment\"># 安装 Node 环境</span>\n      <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v1\n      <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"10.x\"</span>\n\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Hexo Generate         <span class=\"token comment\"># 安装 Hexo 依赖并且生成静态文件</span>\n      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n        rm -f .yarnclean\n        yarn --frozen-lockfile --ignore-engines --ignore-optional --non-interactive --silent --ignore-scripts --production=false\n        rm -rf ./public\n        yarn run hexo clean\n        yarn run hexo generate</span>\n\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Hexo Deploy           <span class=\"token comment\"># 部署步骤，这里以 hexo deploy 为例</span>\n      <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">SSH_PRIVATE</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.SSH_PRIVATE <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n        <span class=\"token key atrule\">GIT_NAME</span><span class=\"token punctuation\">:</span> yourname\n        <span class=\"token key atrule\">GIT_EMAIL</span><span class=\"token punctuation\">:</span> your@email.com\n      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n        mkdir -p ~/.ssh/\n        echo \"$SSH_PRIVATE\" | tr -d '\\r' > ~/.ssh/id_rsa\n        chmod 600 ~/.ssh/id_rsa\n        ssh-keyscan github.com >> ~/.ssh/known_hosts\n        git config --global user.name \"$GIT_NAME\"\n        git config --global user.email \"$GIT_EMAIL\"\n        yarn run hexo deploy</span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"部署到腾讯静态托管\"><a href=\"#%E9%83%A8%E7%BD%B2%E5%88%B0%E8%85%BE%E8%AE%AF%E9%9D%99%E6%80%81%E6%89%98%E7%AE%A1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>部署到腾讯静态托管</h3>\n<p>建议使用<a href=\"https://github.com/TencentCloudBase/cloudbase-action\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">官方 Action</a></p>\n<p>示例代码</p>\n<pre class=\"language-yaml line-numbers\"><code class=\"language-yaml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy\n\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>push<span class=\"token punctuation\">]</span>\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v2\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v1\n      <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'10.x'</span>\n\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Setup Hexo\n      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n        npm install hexo-cli -g\n        npm install</span>\n\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Generate\n      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> hexo clean <span class=\"token important\">&amp;&amp;</span> hexo g\n\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy\n      <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> deployStatic\n      <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> TencentCloudBase/cloudbase<span class=\"token punctuation\">-</span>action@v1.1.1\n      <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">secretId</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.SECRET_ID <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n        <span class=\"token key atrule\">secretKey</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.SECRET_KEY <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n        <span class=\"token key atrule\">envId</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.ENV_ID <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n        <span class=\"token key atrule\">staticSrcPath</span><span class=\"token punctuation\">:</span> public<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>部署 Hexo 的过程中，<code>Deploy</code> 之前的都是差不多，所有之后只需要修改 <code>Deploy</code> 之后的内容就行。</p>\n<h3 id=\"部署到-腾讯cos\"><a href=\"#%E9%83%A8%E7%BD%B2%E5%88%B0-%E8%85%BE%E8%AE%AFcos\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>部署到 腾讯COS</h3>\n<p>建议使用<a href=\"https://github.com/zkqiang/tencent-cos-action\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">zkqiang/tencent-cos-action</a></p>\n<h3 id=\"其他\"><a href=\"#%E5%85%B6%E4%BB%96\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>其他</h3>\n<p>大部分都是有官方 Action 的，即使没有也会有其他人编写的，或参考官方文档。</p>\n<h2 id=\"隐私问题\"><a href=\"#%E9%9A%90%E7%A7%81%E9%97%AE%E9%A2%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>隐私问题</h2>\n<p>可以直接使用 Private 仓库解决。</p>\n<p>对于 Publlic 仓库，可以使用 <code>sed</code> 命令。</p>\n<p>比如我在博客配置 <code>_config.yml</code> 文件中有百度推送的代码</p>\n<pre class=\"language-yaml line-numbers\"><code class=\"language-yaml\"><span class=\"token key atrule\">baidu_url_submit</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">count</span><span class=\"token punctuation\">:</span> <span class=\"token number\">200</span>\n  <span class=\"token key atrule\">host</span><span class=\"token punctuation\">:</span> blog.JalenChuh.cn\n  <span class=\"token key atrule\">token</span><span class=\"token punctuation\">:</span> baiduToken\n  <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> baidu_urls.txt<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>其中 <code>token</code> 属于隐私内容，不能公开，那么我们可以使用 <code>baiduToken</code> 将 <code>token</code> 代替</p>\n<p>而之后在编写的 Action 的时候将 <code>token</code> 存入 <code>secrets</code> ，利用 <code>sed</code> 命令对 <code>baiduToken</code> 进行替换即可。</p>\n<pre class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">sed</span> -i <span class=\"token string\">\"s/baiduToken/<span class=\"token variable\">${baiduToken}</span>/\"</span> _config.yml<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span></span></code></pre>\n<p><code>sed -i</code> 用法为 <code>sed -i 's/原字符串/新字符串/' 文件路径</code></p>\n<p>结合 <code>secrets</code> 使用</p>\n<pre class=\"language-yaml line-numbers\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> env\n  <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">baiduToken</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.baiduToken <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> sed <span class=\"token punctuation\">-</span>i \"s/baiduToken/$<span class=\"token punctuation\">{</span>baiduToken<span class=\"token punctuation\">}</span>/\" _config.yml<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"自动提交百度收录\"><a href=\"#%E8%87%AA%E5%8A%A8%E6%8F%90%E4%BA%A4%E7%99%BE%E5%BA%A6%E6%94%B6%E5%BD%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>自动提交百度收录</h2>\n<p>解决了这个问题我们就可以进行一些更好玩的了，比如百度自动推送</p>\n<p>首先确保安装了 <code>hexo-baidu-url-submit</code>，并且 <code>package.json</code> 的 <code>dependencies</code> 中含有该插件。</p>\n<div class=\"admonition admonition-tip\"><div class=\"admonition-heading\"><h5><div class=\"admonition-icon\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"16\" viewBox=\"0 0 12 16\"><path fill-rule=\"evenodd\" d=\"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z\"></path></svg></div>Tip</h5></div><div class=\"admonition-content\"><p><code>package.json</code> 中如果没有，必须使用 <code>npm i hexo-baidu-url-submit --save</code> 安装</p></div></div>\n<p>然后还是该文件，修改 <code>scripts</code> 部分</p>\n<pre class=\"language-diff line-numbers\"><code class=\"language-diff\">\"scripts\": {\n<span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span><span class=\"token line\"> .......\n</span><span class=\"token prefix unchanged\"> </span><span class=\"token line\"> \"xx\": \"xxxx\",\n</span></span><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span><span class=\"token line\">  \"baidupush\": \"hexo deploy\"\n</span></span>},<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<div class=\"admonition admonition-warning\"><div class=\"admonition-heading\"><h5><div class=\"admonition-icon\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"16\" viewBox=\"0 0 12 16\"><path fill-rule=\"evenodd\" d=\"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z\"></path></svg></div>必须遵循 json 规范</h5></div><div class=\"admonition-content\"><p>最后一行，也就是 <code>baidupush</code> 这行结尾没有逗号，而倒数第二行必须有逗号</p></div></div>\n<p>百度给了几千条的限额，你可以通过 <code>hexo deploy &#x26;&#x26; hexo deploy ...</code> 执行多次，把全部额度用完，但貌似一个链接重复提交会被百度降权（不懂 SEO），所以看你自己了。</p>\n<p>但是还有一个问题，如果你使用的是 GitHub Page 之类的，每次推送的同时都会把博客也推送一遍，没这必要，那么我们可以新建一个配置文件 <code>_baidupush.yml</code> ，将 <code>_config.yml</code> 中我内容复制进去，再修改末尾 <code>deploy</code> 部分，仅保留百度推送。</p>\n<pre class=\"language-diff line-numbers\"><code class=\"language-diff\">deploy:\n<span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span><span class=\"token line\"> - type: baidu_url_submitter\n</span></span><span class=\"token deleted-sign deleted\"><span class=\"token prefix deleted\">-</span><span class=\"token line\">  - type: git\n</span><span class=\"token prefix deleted\">-</span><span class=\"token line\">    repo: git@github.com:jalenchuh/test.git\n</span><span class=\"token prefix deleted\">-</span><span class=\"token line\">    branch: master</span></span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>那么之前命令中的所有 <code>hexo deploy</code> 就需要相应的替换成 <code>hexo deploy --config _baidupush.yml</code></p>\n<p>然后在 <code>secrets</code>  中存入 <code>baiduToken</code></p>\n<p>并编写 Action，每天北京时间 0 点自动执行</p>\n<pre class=\"language-yaml line-numbers\"><code class=\"language-yaml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> baiduPush\n\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">schedule</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">cron</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'0 16 * * *'</span> <span class=\"token comment\"># Github Action 使用的是 UTC 时间</span>\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v2\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v1\n      <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'10.x'</span>\n\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Setup Hexo\n      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n        npm install hexo-cli -g\n        npm install</span>\n\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> BAIDU env\n      <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">baiduToken</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.baiduToken <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n\n      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> sed <span class=\"token punctuation\">-</span>i \"s/baiduToken/$<span class=\"token punctuation\">{</span>baiduToken<span class=\"token punctuation\">}</span>/\" _baidupush.yml <span class=\"token comment\"># 替换 baiduToken</span>\n\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> generate\n      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> hexo clean <span class=\"token important\">&amp;&amp;</span> hexo g\n\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> push\n      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run baidupush <span class=\"token comment\"># 执行前面写好的命令</span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"最后\"><a href=\"#%E6%9C%80%E5%90%8E\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>最后</h2>\n<p>著名的 CI 工具还有 Travis CI，相比之下我觉得 GitHub Action 更加容易上手，而且和 GitHub 直接集成算是它的一大优势吧。</p>\n<p>不过还是有一些缺点的，比如没办法本地调试，第一次使用 Action 列表中总是一片 :x:。还有就是出错之后 <code>re run</code> 只能全部重来，没办法指定从某一个 steps 开始</p>\n<p>当然了，已经做的非常不错了。同时，期待下即将推出的 Codespaces。</p>\n<div class=\"footnotes\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>GitHub Page 部署代码来自 <a href=\"https://hexo.fluid-dev.com/posts/actions-deploy/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://hexo.fluid-dev.com/posts/actions-deploy/</a></p>\n<a href=\"#fnref-1\" class=\"footnote-backref\">↩</a>\n</li>\n</ol>\n</div>\n","cover_image":{"type":"image","mimeType":"image/png","src":"/assets/static/use-github-action.a209973.7eac810ebb843f63471550bc5b62c4f5.png","size":{"width":1280,"height":400},"sizes":"(max-width: 1280px) 100vw, 1280px","srcset":["/assets/static/use-github-action.a67b0b2.7eac810ebb843f63471550bc5b62c4f5.png 480w","/assets/static/use-github-action.a209973.7eac810ebb843f63471550bc5b62c4f5.png 1280w"],"dataUri":"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1280 400' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-f934b4fdc4f8203dcdc412be48c6d547'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='10'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-f934b4fdc4f8203dcdc412be48c6d547)' width='1280' height='400' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAUCAIAAACyFKxoAAAACXBIWXMAAAsSAAALEgHS3X78AAAGYElEQVRIx41XWW8TVxT2H6j6WlSpj5UqdZeqLkhV1VaqaKs%2b5aEPLaqE%2blJ4ACq6qFDoQ1tQQW0oWVkSQkICISEBmkASZyFxFkJMQuLE8Ronju1gezzjZWZsz8zpuePx%2bM7YBKyrq5t7z9xzvrPdLxZWhIRABqcu2OLMFnfIn/q%2bOrRNo4y%2bk%2bApeUpG%2b1CEx2nU79cueTqNFk1r8ZgtmmsAIFY2qLCmv9JMEanbRE1eN9d0G0tdJUgQz0AsA7wEySww22tU77Ho6Glns5Qm%2bhQ/ZgSDHeViBWUMX1mG9jftnaQIYQ5mfdB6F9rGyQL/5NSj7TUWI0BZYIiDaIakay15RaTCLZqjYYqqvihojPNkIFoUbhmD5hEYWiSjaZggwSA8QSNJoTJlNAxzWIQKMnRy62KFWHFGYAnKF7jGVNlKQVyAZA4cm8T6pQ3gsgTSQgAujoJ7C9I5qn4qabQUAsQVj7UEEMwpQZcyXZSmEkyUVRFD6aZvwyyPJBWcV/2hJbf3%2bix02DBtJEcgwgp5BIaJ1D0Dgkzis41GC1OWGzinsuSzVLbkRYYvNAeF4RVWUFRhba1ajDtKEYCiO4kjHyp0tylAwtywrUL7pGJ1wMScc3R6dtoDV6bA4U9VfbKrvql1i4fWMWnKDXy%2bZIOpGRQB8CXf606aDcINB/gZVZovuVAEyEiQygGXUxd5MqOJ6TxZ4wLDmpbwdoVDGKJCJEkeF%2bBpIHFzJQSXx8G%2bEuiZyT0IAP4QUt0A9NuV4SOHhrruDDmh7raMuZQsphzDl1zAUhlhMaUKztEMtNrh73GwrUFOVluEVkyydXzmgcPj24wFtjj7kmvJ7Xe4A1mABad3xbshKgSD0x9KCBKXlSIJ3hdi/KFYMitjVjB8jsuS0GXysLwJHZPwYNnbeCf7bx/0z8N9n7Lgz9cNw5%2bn7N8fdx/tgcV1hS48U/LoXc5iOsCBdTMXhNMT0LkAUwHoc8LMuiwDDIxN91vHRybvX%2broxtHe2VvT2NzcdnVu0XW2ue1Mw4Vlb3CLEw8c%2bnlxda1v6O75lo62zp5%2b60Rv//B/g2MXWq9M2xcFAlJGN42tQOc9qPoLvvgDPj4G356RMA6Ng/lXDsA7%2b7lz10J5ACaj0NaX49EAmHoFpn4kBb3LUDcFnQ%2bhZhIGXbICYLu/2NLehYbWNFzo7Olrv9bbeqX73MXLaP2Jk//Unm22TswMT8yerK6paWxChN03b6NMdU1jw/lLeHqqurbtag%2bGK56RMKQRlg9EmAP1zBt7o%2b8djL%2b7b8M2MHnrRPWn%2bz179tncfbcyBIBseJSEYv8tdh2OBqB3jEIWDbqgYx7GvDC/CctbBBWm8sNV/%2bpa2LPxyB3Ycq2F1h8x/s34sifoWossuddjaQmzi0mnvcEoJtJamMHZF4y61yP%2bUNzp28R9NZtJzSx5Q%2b3XbzZ1DVdfsp1unTjXda%2b2of3Ij79W7T75zdf1I%2bNekUAti4BY1oXoBlcAgOmFHtrgYMBFqnnlEfji6sPOQ0YmxZpUSzYlkf6NFYmLtDrwhiRp2zKeoolY6GlVpjCn1OpPaBWpYCiWPL4Iw4H6uz08%2btmXX735wUcvvvX%2bjpffvj4wikkbS8s6vyo9TaLWEgtHFrb8nVMHWsypm3q5JNQ2qrfLhNpVOHUmCngzJWG09qp7S9E6XiEIEsw5PJ5gPKE%2bZFW79zzz3I6Xdla9tuun1z///ZeGVXwKTHzOxIWol1ioQMjMT7dQmTlWJnMm/mfiI6ojsP/aHV5/mEHreQX2Hjr87PMvHPyt3uqEG3Z5YEFmeeUJGktdyITSyCXpV9bETw3GGVkQU05AxJIjNADLXl%2bYwU38/XD02Ks7P7wxshiIK/6YHGTVfOOfrNGir7hyMicYWZpYgf1XIHMUiTBfVXKnkpZJCuFDgaWCFPq7wy1/1naPzoedodxKGLzRQjmVnq3HabSYOIYJMVOR5BlhmP9nMD6LJO%2bNZBvLhuNzAj5nLt9mJIpv5Zhtdv/B49a7DuuMOxzL%2bCL59WguLeY4Pq8Rk8drrEzmKtIv1rhTLNMKOxXJHPXeY%2blLSV7iMrkUn0sJuUxWCsdiMS4d4wTcZNN5NpNP8nkUK7SBbTRamKLddHUbKl0o8VOumEhMJWZaItVGysUZI8OUOYsQxzxhTTgSdBU9hcb/Afrv4b4qLUNrAAAAAElFTkSuQmCC' /%3e%3c/svg%3e"}},"previous":{"title":"爱折腾的少年｜新人报道","path":"/posts/newcomer-to-sspai/"},"next":{"title":"写在计算机会考前","path":"/posts/before-computer-exam/"}},"context":{"previousElement":"8b148466a1aba944435028b1d5d968cd","nextElement":"08ce26fd760a21b74991f926d4578bf0","id":"ea86035eabfc9ea9c018a18f1ab80722"}}