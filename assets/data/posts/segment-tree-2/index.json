{"hash":"f5447af08fb91148b9326e1febff581689f9e6f2","data":{"post":{"title":"P3372 【模板】线段树 2","path":"/posts/segment-tree-2/","date":"July 11. 2020","timeToRead":4,"cjkWordCount":1127,"cjkReadTime":5,"tags":[{"id":"Algorithm","title":"Algorithm","path":"/tag/Algorithm/"}],"cate":{"id":"tech","title":"tech","path":"/category/tech/"},"description":"","published":true,"content":"<p><sup id=\"fnref-1\"><a href=\"#fn-1\" class=\"footnote-ref\">1</a></sup></p>\n<h2 id=\"题目描述\"><a href=\"#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>题目描述</h2>\n<p>如题，已知一个数列，你需要进行下面三种操作：</p>\n<ul>\n<li>将某区间每一个数乘上 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">x</span></span></span></span></li>\n<li>将某区间每一个数加上 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">x</span></span></span></span></li>\n<li>求出某区间每一个数的和</li>\n</ul>\n<h2 id=\"输入格式\"><a href=\"#%E8%BE%93%E5%85%A5%E6%A0%BC%E5%BC%8F\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>输入格式</h2>\n<p>第一行包含三个整数 n,m,p，分别表示该数列数字的个数、操作的总个数和模数。</p>\n<p>第二行包含 n 个用空格分隔的整数，其中第 i 个数字表示数列第 i 项的初始值。</p>\n<p>接下来 m 行每行包含若干个整数，表示一个操作，具体如下：</p>\n<p>操作 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>： 格式：<code>1 x y k</code> 含义：将区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[x,y]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">]</span></span></span></span> 内每个数乘上 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span></span></span></span></p>\n<p>操作 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span>： 格式：<code>2 x y k</code> 含义：将区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[x,y]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">]</span></span></span></span> 内每个数加上 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span></span></span></span></p>\n<p>操作 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">3</span></span></span></span>： 格式：<code>3 x y</code> 含义：输出区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[x,y]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">]</span></span></span></span> 内每个数的和对 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">p</span></span></span></span> 取模所得的结果</p>\n<h2 id=\"输出格式\"><a href=\"#%E8%BE%93%E5%87%BA%E6%A0%BC%E5%BC%8F\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>输出格式</h2>\n<p>输出包含若干行整数，即为所有操作 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">3</span></span></span></span> 的结果。</p>\n<h2 id=\"输入输出样例\"><a href=\"#%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E6%A0%B7%E4%BE%8B\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>输入输出样例</h2>\n<p><strong>输入 #1</strong></p>\n<pre class=\"language-text line-numbers\"><code class=\"language-text\">5 5 38\n1 5 4 2 3\n2 1 4 1\n3 2 5\n1 2 4 2\n2 3 5 5\n3 1 4<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>输出 #1</strong></p>\n<pre class=\"language-text line-numbers\"><code class=\"language-text\">17\n2<span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span></span></code></pre>\n<h2 id=\"说明提示\"><a href=\"#%E8%AF%B4%E6%98%8E%E6%8F%90%E7%A4%BA\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>说明/提示</h2>\n<p>【数据范围】</p>\n<p>对于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>30</mn><mi mathvariant=\"normal\">%</mi></mrow><annotation encoding=\"application/x-tex\">30\\%</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80556em;vertical-align:-0.05556em;\"></span><span class=\"mord\">3</span><span class=\"mord\">0</span><span class=\"mord\">%</span></span></span></span> 的数据：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>8</mn></mrow><annotation encoding=\"application/x-tex\">n \\le 8</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">8</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mo>≤</mo><mn>10</mn></mrow><annotation encoding=\"application/x-tex\">m \\le 10</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\">m</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span></span>\n对于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>70</mn><mi mathvariant=\"normal\">%</mi></mrow><annotation encoding=\"application/x-tex\">70\\%</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80556em;vertical-align:-0.05556em;\"></span><span class=\"mord\">7</span><span class=\"mord\">0</span><span class=\"mord\">%</span></span></span></span> 的数据：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>3</mn></msup></mrow><annotation encoding=\"application/x-tex\">n \\le 10^3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>4</mn></msup></mrow><annotation encoding=\"application/x-tex\">m \\le 10^4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\">m</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span></span></span></span></span></span></span></span>\n对于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>100</mn><mi mathvariant=\"normal\">%</mi></mrow><annotation encoding=\"application/x-tex\">100\\%</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80556em;vertical-align:-0.05556em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">%</span></span></span></span> 的数据：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding=\"application/x-tex\">n \\le 10^5</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">5</span></span></span></span></span></span></span></span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding=\"application/x-tex\">m \\le 10^5</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\">m</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">5</span></span></span></span></span></span></span></span></span></span></span></p>\n<p>除样例外，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo>=</mo><mn>571373</mn></mrow><annotation encoding=\"application/x-tex\">p = 571373</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">p</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">5</span><span class=\"mord\">7</span><span class=\"mord\">1</span><span class=\"mord\">3</span><span class=\"mord\">7</span><span class=\"mord\">3</span></span></span></span></p>\n<p>（数据已经过加强^_^）</p>\n<p>样例说明：</p>\n<figure><img src=\"https://rmt.dogedoge.com/fetch/royce/storage/SegmentTree2/01.jpg?fmt=webp\" alt=\"img\"><figcaption>img</figcaption></figure>\n<p>故输出应为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>17</mn></mrow><annotation encoding=\"application/x-tex\">17</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">7</span></span></span></span>、<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>22</mn><mtext>（</mtext><mn>40</mn><mtext> </mtext><mo lspace=\"0.22em\" rspace=\"0.22em\"><mrow><mi mathvariant=\"normal\">m</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">d</mi></mrow></mo><mtext> </mtext><mn>38</mn><mo>=</mo><mn>2</mn><mtext>）</mtext></mrow><annotation encoding=\"application/x-tex\">22（ 40 \\bmod 38 = 2 ）</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mord\">2</span><span class=\"mord cjk_fallback\">（</span><span class=\"mord\">4</span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mspace\" style=\"margin-right:0.05555555555555555em;\"></span><span class=\"mbin\"><span class=\"mord\"><span class=\"mord mathrm\">m</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">d</span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mspace\" style=\"margin-right:0.05555555555555555em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">3</span><span class=\"mord\">8</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mord cjk_fallback\">）</span></span></span></span></p>\n<h2 id=\"所以\"><a href=\"#%E6%89%80%E4%BB%A5\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>所以</h2>\n<p>真的有那么亿点点难理解，也还不怎么会，学的时候主要是看 <a href=\"https://oi-wiki.org/ds/seg/#luogu-p3373-2\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">线段树 - OI Wiki</a> 的代码 和 <a href=\"https://www.luogu.com.cn/blog/lhr/solution-p3373\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">题解 P3373 【【模板】线段树 2】 - lqhsr 的博客</a> 的思路</p>\n<p>一个讲的挺明白的，一个代码看着挺明白的 :trophy:</p>\n<h3 id=\"结构体函数\"><a href=\"#%E7%BB%93%E6%9E%84%E4%BD%93%E5%87%BD%E6%95%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>结构体函数</h3>\n<p>之前学结构体的时候知道里面可以定义函数，也只是知道，从来没用过。\n这题因为经常要 <code>mod</code>，配合结构体函数还是挺方便的。</p>\n<pre class=\"language-cpp line-numbers\"><code class=\"language-cpp\"><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Test</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> test1<span class=\"token punctuation\">,</span> test2<span class=\"token punctuation\">,</span> test3<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">mod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        test1 <span class=\"token operator\">%=</span> p<span class=\"token punctuation\">;</span>\n        test2 <span class=\"token operator\">%=</span> p<span class=\"token punctuation\">;</span>\n        test3 <span class=\"token operator\">%=</span> p<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>test<span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\ntest<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">mod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"懒标记下传\"><a href=\"#%E6%87%92%E6%A0%87%E8%AE%B0%E4%B8%8B%E4%BC%A0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>懒标记下传</h3>\n<p>和线段树 1 比，多了一个乘法，所以多了乘法懒标记，<strong>初值为 1</strong>。\n乘法懒标记下传时需要对 <code>加法懒标记</code>、<code>乘法懒标记</code>和<code>值</code> 进行乘法。\n区间乘法也同样的需要对这三个值进行乘法。\n其他的基本和线段树 1 一样。</p>\n<p>懒标记下传的代码确实挺长的，但理清思路发现还是比较好理解的。</p>\n<ol>\n<li>乘法懒标记不为 1，则需要下传。\n分左右儿子，每边先把所有的乘法做好，再 <code>.mod()</code>\n<strong>最后父亲乘法懒标记赋值为 1</strong></li>\n<li>加法懒标记不为 0，则需要下传。也分左右儿子\n儿子懒标记加上父亲懒标记\n儿子值加上 （父亲懒标记 * 儿子所办含的节点数）\n再 <code>.mod()</code>\n<strong>最后父亲懒标记归零</strong></li>\n</ol>\n<h3 id=\"区间修改\"><a href=\"#%E5%8C%BA%E9%97%B4%E4%BF%AE%E6%94%B9\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>区间修改</h3>\n<p>整体思路和线段树 1 的一样，乘法的区间修改唯一的区别就在最后一步</p>\n<pre class=\"language-cpp line-numbers\"><code class=\"language-cpp\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>l<span class=\"token operator\">&lt;=</span>s <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token operator\">&lt;=</span>r<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    tree<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>m <span class=\"token operator\">*=</span> c<span class=\"token punctuation\">;</span>\n    tree<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>f <span class=\"token operator\">*=</span> c<span class=\"token punctuation\">;</span>\n    tree<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>w <span class=\"token operator\">*=</span> c<span class=\"token punctuation\">;</span>\n    tree<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">mod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"完整代码\"><a href=\"#%E5%AE%8C%E6%95%B4%E4%BB%A3%E7%A0%81\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>完整代码</h3>\n<pre class=\"language-cpp line-numbers\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cstdio></span></span>\n\n<span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> n<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> at<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">node</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> l<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">mod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        w <span class=\"token operator\">%=</span> p<span class=\"token punctuation\">;</span>\n        f <span class=\"token operator\">%=</span> p<span class=\"token punctuation\">;</span>\n        m <span class=\"token operator\">%=</span> p<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>tree<span class=\"token punctuation\">[</span><span class=\"token number\">400010</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">bool</span> flag <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">char</span> ch <span class=\"token operator\">=</span> <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>ch<span class=\"token operator\">&lt;</span><span class=\"token string\">'0'</span> <span class=\"token operator\">||</span> ch<span class=\"token operator\">></span><span class=\"token string\">'9'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>ch <span class=\"token operator\">==</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span> flag <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> ch <span class=\"token operator\">=</span> <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>ch<span class=\"token operator\">>=</span><span class=\"token string\">'0'</span> <span class=\"token operator\">&amp;&amp;</span> ch <span class=\"token operator\">&lt;=</span> <span class=\"token string\">'9'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>x <span class=\"token operator\">*=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">+=</span> ch <span class=\"token operator\">-</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">;</span> ch <span class=\"token operator\">=</span> <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> flag <span class=\"token operator\">?</span> <span class=\"token operator\">-</span> x <span class=\"token operator\">:</span> x<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> l<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> k<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">+</span> r<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    tree<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>l <span class=\"token operator\">=</span> l<span class=\"token punctuation\">,</span> tree<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>r <span class=\"token operator\">=</span> r<span class=\"token punctuation\">,</span> tree<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>m <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">==</span> r<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        tree<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>w <span class=\"token operator\">=</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">,</span> mid<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>mid<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span>k<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    tree<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>w <span class=\"token operator\">=</span> tree<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>w <span class=\"token operator\">+</span> tree<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>k<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>w<span class=\"token punctuation\">;</span>\n    tree<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">mod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">down</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> k<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> lson <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> k<span class=\"token punctuation\">,</span> rson <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> k <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> tree<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>m<span class=\"token punctuation\">,</span> f <span class=\"token operator\">=</span> tree<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tree<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>m <span class=\"token operator\">!=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        tree<span class=\"token punctuation\">[</span>lson<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>w <span class=\"token operator\">*=</span> m<span class=\"token punctuation\">;</span>\n        tree<span class=\"token punctuation\">[</span>lson<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>f <span class=\"token operator\">*=</span> m<span class=\"token punctuation\">;</span>\n        tree<span class=\"token punctuation\">[</span>lson<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>m <span class=\"token operator\">*=</span> m<span class=\"token punctuation\">;</span>\n        tree<span class=\"token punctuation\">[</span>lson<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">mod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        tree<span class=\"token punctuation\">[</span>rson<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>w <span class=\"token operator\">*=</span> m<span class=\"token punctuation\">;</span>\n        tree<span class=\"token punctuation\">[</span>rson<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>f <span class=\"token operator\">*=</span> m<span class=\"token punctuation\">;</span>\n        tree<span class=\"token punctuation\">[</span>rson<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>m <span class=\"token operator\">*=</span> m<span class=\"token punctuation\">;</span>\n        tree<span class=\"token punctuation\">[</span>rson<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">mod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        tree<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>m <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        tree<span class=\"token punctuation\">[</span>lson<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>f <span class=\"token operator\">+=</span> f<span class=\"token punctuation\">;</span>\n        tree<span class=\"token punctuation\">[</span>lson<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>w <span class=\"token operator\">+=</span> f <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>tree<span class=\"token punctuation\">[</span>lson<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>r <span class=\"token operator\">-</span> tree<span class=\"token punctuation\">[</span>lson<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>l <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        tree<span class=\"token punctuation\">[</span>lson<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">mod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        tree<span class=\"token punctuation\">[</span>rson<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>f <span class=\"token operator\">+=</span> f<span class=\"token punctuation\">;</span>\n        tree<span class=\"token punctuation\">[</span>rson<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>w <span class=\"token operator\">+=</span> f <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>tree<span class=\"token punctuation\">[</span>rson<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>r <span class=\"token operator\">-</span> tree<span class=\"token punctuation\">[</span>rson<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>l <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        tree<span class=\"token punctuation\">[</span>rson<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">mod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        tree<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>f <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">cheng</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> l<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> c<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> s <span class=\"token operator\">=</span> tree<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>l<span class=\"token punctuation\">,</span> t <span class=\"token operator\">=</span> tree<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">+</span> t<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>l<span class=\"token operator\">&lt;=</span>s <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token operator\">&lt;=</span>r<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        tree<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>m <span class=\"token operator\">*=</span> c<span class=\"token punctuation\">;</span>\n        tree<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>f <span class=\"token operator\">*=</span> c<span class=\"token punctuation\">;</span>\n        tree<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>w <span class=\"token operator\">*=</span> c<span class=\"token punctuation\">;</span>\n        tree<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">mod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">down</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">&lt;=</span> mid<span class=\"token punctuation\">)</span> <span class=\"token function\">cheng</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span>k<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">>=</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token function\">cheng</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span>k<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    tree<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>w <span class=\"token operator\">=</span> tree<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>w <span class=\"token operator\">+</span> tree<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>k<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>w<span class=\"token punctuation\">;</span>\n    tree<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>w <span class=\"token operator\">%=</span> p<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> l<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> at<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> s <span class=\"token operator\">=</span> tree<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>l<span class=\"token punctuation\">,</span> t <span class=\"token operator\">=</span> tree<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">+</span> t<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>l<span class=\"token operator\">&lt;=</span>s <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token operator\">&lt;=</span>r<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        tree<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>f <span class=\"token operator\">+=</span> at<span class=\"token punctuation\">;</span>\n        tree<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>w <span class=\"token operator\">+=</span> at <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">-</span> s <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        tree<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">mod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">down</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">&lt;=</span> mid<span class=\"token punctuation\">)</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span>k<span class=\"token punctuation\">,</span> at<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">>=</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span>k<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> at<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    tree<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>w <span class=\"token operator\">=</span> tree<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>w <span class=\"token operator\">+</span> tree<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>k<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>w<span class=\"token punctuation\">;</span>\n    tree<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">mod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> l<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> k<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> s <span class=\"token operator\">=</span> tree<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>l<span class=\"token punctuation\">,</span> t <span class=\"token operator\">=</span> tree<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">,</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">+</span> t<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>l<span class=\"token operator\">&lt;=</span>s <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token operator\">&lt;=</span>r<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> tree<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>w<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">down</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">&lt;=</span> mid<span class=\"token punctuation\">)</span> sum <span class=\"token operator\">+=</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    sum <span class=\"token operator\">%=</span> p<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">>=</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> sum <span class=\"token operator\">+=</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span>k<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> sum <span class=\"token operator\">%</span> p<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    n <span class=\"token operator\">=</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> m <span class=\"token operator\">=</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> p <span class=\"token operator\">=</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>m<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        d <span class=\"token operator\">=</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> x <span class=\"token operator\">=</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>d <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            c <span class=\"token operator\">=</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">cheng</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>d <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            at <span class=\"token operator\">=</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> at<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%lld\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"line-numbers-rows\" aria-hidden=\"true\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<div class=\"admonition admonition-warning\"><div class=\"admonition-heading\"><h5><div class=\"admonition-icon\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"16\" viewBox=\"0 0 12 16\"><path fill-rule=\"evenodd\" d=\"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z\"></path></svg></div>🚨 注意 %}</h5></div><div class=\"admonition-content\"><p>mod 别忘了</p><p>add 要 return\ncheng 要 return\nbuild 要 return</p><p>get 要 down(k)\nadd 要 down(k)\ncheng 要 down(k)</p><p>要不然就会这样，一个月了才过（虽然前面有 AC 一次）</p><figure><img src=\"https://rmt.dogedoge.com/fetch/royce/storage/SegmentTree2/02.png?fmt=webp\" alt=\"warnning\"><figcaption>warnning</figcaption></figure></div></div>\n<div class=\"footnotes\">\n<hr>\n<ol>\n<li id=\"fn-0\">\n<p>Banner from <a href=\"https://icons8.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Icons8</a></p>\n<a href=\"#fnref-0\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-1\">\n<p>题目来源 <a href=\"https://www.luogu.com.cn/problem/P3373\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">【模板】线段树 2 - 洛谷</a></p>\n<a href=\"#fnref-1\" class=\"footnote-backref\">↩</a>\n</li>\n</ol>\n</div>\n","cover_image":{"type":"image","mimeType":"image/png","src":"/%3CBlog%3E/assets/static/segment-tree-2.a209973.44b9c73f3c5e45e18396aad67df0daee.png","size":{"width":1280,"height":400},"sizes":"(max-width: 1280px) 100vw, 1280px","srcset":["/%3CBlog%3E/assets/static/segment-tree-2.a67b0b2.44b9c73f3c5e45e18396aad67df0daee.png 480w","/%3CBlog%3E/assets/static/segment-tree-2.a209973.44b9c73f3c5e45e18396aad67df0daee.png 1280w"],"dataUri":"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1280 400' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-c451b7c7732bb0c21cda54e66b9af20d'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='10'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-c451b7c7732bb0c21cda54e66b9af20d)' width='1280' height='400' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAUCAYAAAA9djs/AAAACXBIWXMAAAsSAAALEgHS3X78AAAHC0lEQVRYw81YeVRU5xWHLNVo1RIlhhQXFiHELufY42lP4klNVRiDYtucpKnGU6CnrWnSGmAGZmBgiGlSqjYS4l6lTaJEBVxGGfZV9m1mYFhc2qNxC1ECDMM67/5uvzfDIObkv9DT%2beOe%2b7133vfeu7/v97v3fp9HomkIwniKnyazIdFog0YeG78ynvCayXuDSBBjtRhrzCOsMQ1zonkYavOIPE9cD2Fy3vTYZMwe0wmAZuInNV8JOMk4KAfpCuQ%2bIMJSRMDRNbelVSW37EnN/bSj/g6pzKMo1alo/5kKUnYyJ7VaHwTPHQHQOANyvEfdOgiNMJkF8o8rTYR40zhPWc1JBshz48WzscJSGu9RcusAfXCqhLqf80br9s2UYLEj0QGgbTpB%2bJ8A4HiHCJxTuiROtow57iWYxlBdpaIjjQWkNIMFGyaBcQGXJLx24lrZQbDEbKYRhQ/3hfvhUHYRqTrFvNYBTErhm4MwvQBoXHoWq5jcMc5bP66l1/UWqAR9c%2bsOERs80JO/krSOIIYfkMCkZATNlR3gA/qLdGN9AHoigmELXYjjB/9F2y8xNC226WTBtAPgXMm2EVbW3SOvkHD84LW/0O7uz6kvNxh8bh5TwXzsa6wRLBCaNlqdq%2bl6hzy31cqxXYyiPTulSy/44npECD5fuxjlaW9QR91Wer9FAGqSHAzSuKEEoG6xIvUy86/2F9GsYAXmhsZhZ%2bFZic8txHjuQnDBI1xTGUexZhZJ0TrJApfJiS6uizkr8xiNKnww9PMA1K5ZjjtbloBzPbgiL4o05vEHkqi7SYC17aP44W/ekQHgGSuisDdTKXG5F8YLFggAZvOd4p%2bQ1tj3gAymACD0D9Qmb6fRdd7o3RSEwY3%2bsEYEYuDwk3zz7GLsarlMzmQ66ATCrQAQXiQzPBP1Ls14egPPCQpH46HF4NK5PG7wBp%2bYhaslGyjBNDpR24dZ1Hm5X5Al4Rjrmnpx9bVVdCnUH70bA2F5MRgDoYEYTf0uuGIujtQXUtzXSej/CYArASaJAFQNvQhYHYWZ/uH8fFgoJMPjPJa3AFL%2bApDeC9a8JUhrueooidrmL/FO5XWKbxqDqA5QdgLphhayRvijUxGMprAQdAkA7ikC8YXaTzDoYa4v2yYDcF9CbsMAuYaL0heZ1UQrwqLJ99k/UEbqOnDet/FZli/qDi1D5f6n0Z/zHWQ3HKPtbcxpF/9DH5WU2s%2bWHLGXl2mpukIlHftnltQX%2bhT6Be3vbBDU3%2bSPgbAA2HSL0PbRk3zt9HJ6z3QTgkXuA4C8%2bnICfPsK84vvnqQ5S1fjsZBXEfPbFeASL3CxF3LeC0LuzhBwkSfKy9WkamP8SSQ9haFQSqvOk6oqdFJrcbS0q7Bdur0xCP0b/IT2A9An7EbYMtiil6I325svHV%2bC9JY2kqvBRB6A2wCQ2k38yuEymvPjX8NzaQTv1XwPXDVP6H8%2bc6kX8wWRCE/Mhr52H71lZCw6ZSGPj7t4ln4IB5sqJUPTLulAbh39W%2bGHhrBnMChW/7ZgQdm65bj7i0CMHPdGzxkf8Ww1KU1w5QG3YQDvuMpYm5QJz2XhvGDly9x%2bdJHQ7XyMnX4CkvDDn/iCTz6K5loVFDV2mrmngB49YYHn0Tboik7YS427pAt/%2bzuNPjcDNYrvo1dQf2CTkIIiCPdeCIQ1fRFG9N/C%2bao9FCMYpDUOsNswwFECLWPYmJZNvj%2bNpId%2bFIn0PweBDY8Bn8wR3c3jzIWzmQ0P8/XyX9Kamn565INS%2bGzbCQ/lKWzNz7bX1unsB4%2bXUFlKHH3xUjCsb/iRbf0iDPz%2bKSDZF/YDXriSE0B7mkyiFNrdSwITGyAWbTDeLLhCM98vl57dkUFN1bHSNf3PaDTLB9fPraHqqhjabbpJKws%2bI4%2bjZn7ozUx4vF3EWwpy7Y0Xk6Q/ik5Q0zqC0/rDEufPw60Pn6d/nDspqeNXYe%2bnqXTAYqF448hED2BzDwlMtsKuXZ5gwsycyxRy5hppRA%2bfnltNX66fTyf3H3X09Mnimch6G606XyutLc8n/%2bI%2biivOsTfUq6XYVoJSVIjMRgNxtgebG1%2bnyNJB8lz2EsL21UIrOk0538jf%2boZ7gumXwMQZgMO/cvEu/a6mh9TdzPtySqhn9ROkz0int0QAov5zYgdDl5EhnYnxo5c3b6PoLa/Sh3%2bNkpRNQ1DJANRfoHHDQqm2NFZSNtsQ/Wk9xVbegLbNxTibe/UB98FwsiC1bZhTzMMyKzi5uQ%2b7SzsptaEHGrOzBRYemspbSNB3k%2b6CiXTnzUgsvkZTd3s6411oTf3in4ZZJ3oMeaOlmXKa5JYHIg4v5wPXVtcR0DDHt9udba8zQOfBSfsoJ3XaWdMhOSxRPj9wHZUJrzY5j8YcVUY%2bYJm6dZ7G3eB/AVzPem40h5axAAAAAElFTkSuQmCC' /%3e%3c/svg%3e"}},"previous":{"title":"19-20 学年总结","path":"/posts/freshman-high-school/"},"next":{"title":"爱折腾的少年｜新人报道","path":"/posts/newcomer-to-sspai/"}},"context":{"previousElement":"358d3f98958dbdbdddea2697ab159b05","nextElement":"8b148466a1aba944435028b1d5d968cd","id":"978c1757d1e932656a48ac4108142c89"}}